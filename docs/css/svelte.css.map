{
  "version": 3,
  "file": "svelte.css",
  "sources": [
    "../../svelte/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\texport let input;\n\texport let output;\n\n\tfunction homoglyph(input) {\n\t  const homoglyphs = {\n\t    a: [\"\\u0430\", \"\\u00e0\", \"\\u00e1\", \"\\u1ea1\", \"\\u0105\"],\n\t    c: [\"\\u0441\", \"\\u0188\", \"\\u010b\"],\n\t    d: [\"\\u0501\", \"\\u0257\"],\n\t    e: [\"\\u0435\", \"\\u1eb9\", \"\\u0117\", \"\\u0117\", \"\\u00e9\", \"\\u00e8\"],\n\t    g: [\"\\u0121\"],\n\t    h: [\"\\u04bb\"],\n\t    i: [\"\\u0456\", \"\\u00ed\", \"\\u00ec\", \"\\u00ef\"],\n\t    j: [\"\\u0458\", \"\\u029d\"],\n\t    k: [\"\\u03ba\"],\n\t    l: [\"\\u04cf\", \"\\u1e37\"],\n\t    n: [\"\\u0578\"],\n\t    o: [\n\t      \"\\u043e\",\n\t      \"\\u03bf\",\n\t      \"\\u0585\",\n\t      \"\\u022f\",\n\t      \"\\u1ecd\",\n\t      \"\\u1ecf\",\n\t      \"\\u01a1\",\n\t      \"\\u00f6\",\n\t      \"\\u00f3\",\n\t      \"\\u00f2\"\n\t    ],\n\t    p: [\"\\u0440\"],\n\t    q: [\"\\u0566\"],\n\t    s: [\"\\u0282\"],\n\t    u: [\"\\u03c5\", \"\\u057d\", \"\\u00fc\", \"\\u00fa\", \"\\u00f9\"],\n\t    v: [\"\\u03bd\", \"\\u0475\"],\n\t    x: [\"\\u0445\", \"\\u04b3\"],\n\t    y: [\"\\u0443\", \"\\u00fd\"],\n\t    z: [\"\\u0290\", \"\\u017c\"]\n\t  };\n\t  return input\n\t    .split(\"\")\n\t    .map(item => {\n\t      //console.log(item+\"!\"); // key\n\t      if (homoglyphs.hasOwnProperty(item)) {\n\t        //console.log(item); // key\n\t        return homoglyphs[item][\n\t          Math.floor(Math.random() * homoglyphs[item].length)\n\t        ]; // value\n\t      } else {\n\t        return item;\n\t      }\n\t    })\n\t    .join(\"\");\n\t}\n\n\tfunction handleKeydown(event) {\n\t\tconst text = event.target.value;\n\t\toutput = homoglyph(event.target.value);\n\t}\n\n</script>\n\n<style>\n\th1 {\n\t\tcolor: purple;\n\t}\n</style>\n\n<input on:keydown={handleKeydown}>\n\n<h1>Hello, {output}!</h1>\n"
  ],
  "names": [],
  "mappings": "AA8DC,EAAE,cAAC,CAAC,AACH,KAAK,CAAE,MAAM,AACd,CAAC"
}