{
  "version": 3,
  "file": "svelte.css",
  "sources": [
    "../../svelte/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\texport let input=\"\";\n\texport let useHomoglyphs=true;\n\n\tfunction homoglyph(input) {\n\t  const homoglyphs = {\n\t    a: [\"\\u0430\", \"\\u00e0\", \"\\u00e1\", \"\\u1ea1\", \"\\u0105\"],\n\t    c: [\"\\u0441\", \"\\u0188\", \"\\u010b\"],\n\t    d: [\"\\u0501\", \"\\u0257\"],\n\t    e: [\"\\u0435\", \"\\u1eb9\", \"\\u0117\", \"\\u0117\", \"\\u00e9\", \"\\u00e8\"],\n\t    g: [\"\\u0121\"],\n\t    h: [\"\\u04bb\"],\n\t    i: [\"\\u0456\", \"\\u00ed\", \"\\u00ec\", \"\\u00ef\"],\n\t    j: [\"\\u0458\", \"\\u029d\"],\n\t    k: [\"\\u03ba\"],\n\t    l: [\"\\u04cf\", \"\\u1e37\"],\n\t    n: [\"\\u0578\"],\n\t    o: [\n\t      \"\\u043e\",\n\t      \"\\u03bf\",\n\t      \"\\u0585\",\n\t      \"\\u022f\",\n\t      \"\\u1ecd\",\n\t      \"\\u1ecf\",\n\t      \"\\u01a1\",\n\t      \"\\u00f6\",\n\t      \"\\u00f3\",\n\t      \"\\u00f2\"\n\t    ],\n\t    p: [\"\\u0440\"],\n\t    q: [\"\\u0566\"],\n\t    s: [\"\\u0282\"],\n\t    u: [\"\\u03c5\", \"\\u057d\", \"\\u00fc\", \"\\u00fa\", \"\\u00f9\"],\n\t    v: [\"\\u03bd\", \"\\u0475\"],\n\t    x: [\"\\u0445\", \"\\u04b3\"],\n\t    y: [\"\\u0443\", \"\\u00fd\"],\n\t    z: [\"\\u0290\", \"\\u017c\"]\n\t  };\n\t\tconst alphabet = {\n\t    A: ['🅰️'],\n\t    B: ['🅱️️'],\n\t    C: [ '©️', '☪️', '🗜️' ],\n\t    D: ['↩️'],\n\t    E: ['🅴','📧'],\n\t    F: ['🎏'],\n\t    G: ['🅶','⛽️'],\n\t    H: ['🏩','♓️'],\n\t    I: ['💈','ℹ️'],\n\t    J: ['☔', '🎷', '🗾'],\n\t    K: ['🅺', '🎋'],\n\t    L: ['👢', '🕒'],\n\t    M: [ 'Ⓜ️', '♏️', '♍️', '〽' ],\n\t    N: ['🅽','📈'],\n\t    O: ['🅾️', '⭕️', '💍'],\n\t    P: ['🅿️'],\n\t    Q: ['🍳','🍭','♌','🇶','ℚ','℺'],\n\t    R: ['Ⓡ','®️'],\n\t    S: [ '💰', '⚡️' ],\n\t    T: ['🏋', '✝️'],\n\t    U: ['🐋', '⛎'],\n\t    V: ['✌️️', '♈️'],\n\t    W: ['👐','〰️'],\n\t    X: [ '❎', '❌', '✖️', '🙅' ],\n\t    Y: ['🌱', '🍸'],\n\t    Z: ['💤'],\n\t    '!': [ '❗️', '❕' ],\n\t    '?': [ '❓', '❔' ],\n\t    '#': ['#️⃣'],\n\t    '*': ['*️⃣'],\n\t    '+': ['➕'],\n\t    0: ['0️⃣'],\n\t    1: ['1️⃣'],\n\t    2: ['2️⃣'],\n\t    3: ['3️⃣'],\n\t    4: ['4️⃣'],\n\t    5: ['5️⃣'],\n\t    6: ['6️⃣'],\n\t    7: ['7️⃣'],\n\t    8: ['8️⃣'],\n\t    9: ['9️⃣']\n\t};\n\t\tif (input === undefined || input === \"\" ) {\n\t\t  return \"Empty Input!\"\n\t\t}\n\t\tif(useHomoglyphs) {\n\t  return input\n\t    .split(\"\")\n\t    .map(item => {\n\t      if (homoglyphs.hasOwnProperty(item)) {\n\t        return homoglyphs[item][\n\t          Math.floor(Math.random() * homoglyphs[item].length)\n\t        ];\n\t      } else {\n\t        return item;\n\t      }\n\t    })\n\t    .join(\"\");\n\t\t\t} else {\n\t\t\treturn input\n\t\t\t\t.toUpperCase()\n\t\t    .split(\"\")\n\t\t    .map(item => {\n\t\t      if (alphabet.hasOwnProperty(item)) {\n\t\t        return alphabet[item][\n\t\t          Math.floor(Math.random() * alphabet[item].length)\n\t\t        ];\n\t\t      } else {\n\t\t        return item;\n\t\t      }\n\t\t    })\n\t\t    .join(\"\");\n\t\t\t}\n\t}\n\n</script>\n\n<style>\n\th1 {\n\t\tcolor: purple;\n\t}\n</style>\n\n<input bind:value={input} placeholder=\"enter some text\">\n<label>\n\t<input type=checkbox checked={useHomoglyphs}  bind:checked={useHomoglyphs}>\n\tYes! Use homoglyphs instead of Emoji\n</label>\n\n<h1>{homoglyph(input, useHomoglyphs)}</h1>\n"
  ],
  "names": [],
  "mappings": "AAqHC,EAAE,cAAC,CAAC,AACH,KAAK,CAAE,MAAM,AACd,CAAC"
}